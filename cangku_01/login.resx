<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAISEAAAEAIAA0EgAAFgAAACgAAAAhAAAAQgAAAAEAIAAAAAAAAAAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXGE8F15cNVhjViOZaE4Xz3FK
        EepzRgXxcUcJ8XBPFOltTxXOYFUnmFtdL1ZMbE0VAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGNiOi1iVS+RckYI5YNV
        Gv+OXSP/on5J/6eJW/+YbTb/pYRV/6qIW/+lhVf/nXlG/49mL/94UxrlYFotjlpxVi0AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABba1sQYlclhnFJ
        DemQYCn/pIdZ/6OFU/+OYir/jWQ0/4JgLP9+Xyz/fmAt/3pVHf+LYi7/lmk6/6SFVv+skmb/sZBm/35c
        KudjUCJ+WXRaDwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFlu
        WS1qSxrBhVQW/6eFVf+qjF//h14s/2pWIv9sajv/fXlK/4mHUv+Tjlj/lI1U/4mJU/97ekn/bWMy/2tO
        Gf95Thz/m3RD/6B9Tf+RZjH/aVQhvU12WigAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAATnNfN3JLFNyHVh3/r5Jq/5JrOf9mVCX/dn5S/6SeY/+8p2f/s6tz/7Wrbv+9p2P/w6Zf/8Sm
        Xf+2rGv/lbOJ/5ahcP94fVL/Y0wg/4RWHf+qkWj/j2Al/2tLE9dScVA0AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABXemcrcU0V3o5hJv+sjGL/e1Id/2ZvSP+jn2r/2qRQ/++YM/+mp3P/areq/5es
        gP+mqHP/ja+I/36yl/9avbn/erSb/7WmaP/ioUn/oqFt/2hsSP9tPQb/qYxk/6aEV/9sSxTdSot3JwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFiYjw5oThnHlmw3/6B8TP9uRxf/b4Nc/8WnYP/mnUD/35k//+OZ
        O/+nqG//fbKa/5yqff+hp3n/kqyB/3S2of9yt6X/gbKV/7CkZv/olzf/5p1B/8SnYf9xgFv/cUkZ/7CT
        a/+fc0D/aFEcwVWkmgsAAAAAAAAAAAAAAAAAAAAAAAAAAGVqPomLVyH/rJJp/3RMFP9wglr/zqVa/+Sa
        Pf/bm0L/25tD/9+aP//JnlL/qqZv/9WaRv/JnlP/vqJe/8egVP/bmUT/maqA/82dT//emkD/25tC/+Oa
        Pf/Np1v/bn1X/3ZLF/+ymHH/jFca/15zUn4AAAAAAAAAAAAAAAAAAAAAUoVpMnJJEO6tkmn/jmMu/2Vt
        Rv/Gp1//45k9/9qbQ//bm0P/25tD/+GaPv/UnUr/SMHH/5yrff/tljL/6Zc2/+6UMf+GsY7/SsHE/9ma
        Q//dm0L/25tD/9qbRP/kmjz/w6dj/2VrQ/+HWCL/ro9m/3RLE+tJk3krAAAAAAAAAABJinQBXVwvl5Fk
        Lf+je03/Y1Ij/6eia//lnUD/2ptD/9ubQ//bm0P/25tD/92aQf/imT3/RsLI/wnT+/+XrIL/5Jc4/3S2
        of8B1v//YLyx/+iXN//am0T/25tD/9ubQ//bm0L/5p1A/6OhbP9lUCL/pYJW/41aIf9dZz6OAAAAAAAA
        AABff2EjcUsR4rGVbP98Vx3/e4FX/9qjT//cmD3/25tD/9ubQ//bm0P/25tD/+KZPf/2kin/cbWj/wDW
        //8azvD/QMTO/w/S/f8G0///ja+K/+iXOP/am0P/25tD/9ubQ//amkT/5Z9K/9ajU/90flD/hl8r/6iH
        Wv90SxDnVHpxFgAAAABfZkFbi2Am/6mLYf9nVSP/qZ1m/+eeRP/hpFH/25pC/9qaQv/cm0L/3ZpA/7ui
        X/+PsIX/Xru2/xHR+v8S0fn/CtP//xLR+f8U0Pr/r6Vs/+SYOv/bm0P/25tD/9ubQv/am0P/67Jo/+ee
        Q/+emmH/cFkn/7CUbf+FVx//WWpTVVR9cANiVyOXlWw2/4thKv9taz3/yKNY/+qkTP/8xYH/56td/96e
        Sv/dmD7/vKFd/52re/+Zq3r/fbKV/xPQ+P8U0Pf/FtD1/wzS/f8oyub/05xK/+OZPP/bm0P/25tD/9ub
        Q//XmED/8bt0//e5a//Io1n/ZmU2/6SBVv+XcDr/YlsvmFN7aSBvWiDCn3tL/3tRHv99gVX/2Z1F/+eo
        U///zIv/77ds/9yZQf/FnlT/wp9W/+OXOP/xmDT/wKdn/xbP9v8T0Pj/FtD2/wvT/v83xdf/rqZs/+WX
        Ov/cm0P/25tE/9uaQ//am0T/9Lt1///Kif/wvXT/cnpN/4pjL/+ifkv/aVIbzlFuUlN+Vx/ar5Np/3VM
        Gv+MkGH/7a5c//O7cv/+yoj/+MB6/96cSP+cqnz/xqJe/9+YPf/jplP/17Jw/yfP7/8Q0Pn/FdD3/xLR
        +f8/xNH/Hc3q/4ivj//mlzj/3JtC/9eWP//prV///8qH//3Kh//6w3n/iIpa/3tYIf+iglX/ck4Q6mZc
        JXqBVhnkr5No/3NPGv+Zm2v//8mA///Liv/8xYH/9r52/+6oVf94tJ3/qLiM/+mcQP/nqln/3KFN/zvJ
        2f8M0fz/FND3/w7S/f98s5r/Vb27/wLV//+bqnz/6JQ1/9iZQv/orWD/+8mC/+q1av/hn0f/jY5Z/3VU
        Hf+eeUf/dkkH8W9GBIp1SQblfUsJ/25JDv+UlWP/+Ldo/+61av/doFD/7bNm///CdP+UxKr/WczS//zC
        df/6wHj/5J5G/1HBxP8K0///EtH5/xLQ+f+spmz/55U1/0zBw/8bzur/1K1o/+ukUP/go1P/3qBO/9eZ
        Q//gnUL/kZRf/21ICf96RQD/d0kD8XNNCopySw7beEMA/25GCP+MkF7/8LJh/+y0Z//nrmH/9Lt1///I
        gP/cyJL/IM/x/5/LsP//xXv/+7dk/2y4qP8H0///D9L8/yXM6P/DoVn/75Uv/9ecSP8ryuD/dM3F//Wr
        U//ZnEj/15dA/9ubQv/hoEb/io9g/25FBP96RAD/dU4P62phLXttUxvCfEYA/3FDBP9+hFb/2aFO//Gz
        Z//5xX///8V+///Gfv//xXz/dsrD/wrP+//Ayp7//7xj/4+8nP8H0f7/DNL+/zzE0//am0X/3Zk8/+6e
        P/+7xJn/PNLo/+/Dgv/gnkn/2ZlA/9ybQv/bokz/eoJa/3RCAP98RQD/blgiz1p4XFRpWy2ZeT8A/3M+
        AP9vbkD/zaZf/+umU//rq1v/yb2E/8nHmv//xn//7cWE/zjO4/8Zz/P/w8aX/8LGlv8N0fr/CNP//1u8
        t//llzr/2pg+/+CiTf/9xYD/aszK/9DGk//xqlf/2JdB/+CaPv/JpVz/aWg+/3M6AP94QgD/amc8mlyK
        eSJca01djF8p/7KWdP+PjW7/o5ha/+SaPf/rpVD/f8i9/2jLy//9yYL//8h+/97Hj/8v0O3/DdH//3XL
        xv8hz+//BNP//4GylP/nljT/2ZxG/+u1bP//wnf/qcOc/8a1eP/ooUn/15lD/+acP/+hmmP/jYRh/5l0
        Rf+ATxD/UHpkWEqRjAJIfVwjmYhg5ODXyP+4qpL/e4Zc/9mfSv/emT//1a9p/9CsaP/6tWf/+791//7E
        dv/Zu3v/RMPN/xDP9/8gze//DdL9/6unbv/1kir/5pk9//GoUv/ln0X/0bZ4/8m7g/9cvrv/waBU/9yg
        S/93hF3/vK6V/+Dbzf+Tdk3nPIl+FwAAAABIlo4DbXdUmaeAU/+NXCb/ZFUo/6efZ//mm0D/3Jg9/92W
        Pf+opW//wKJh/+KfS//jmT3/3ZlB/46uhv8ryeP/Fc/3/0/AxP98s5r/pKdw/6ujaP+2oGL/5adY/9Gx
        b/93tZ//zqNX/6KaYf9nVij/h1gg/6V9TP9ofFiTAAAAAAAAAAAAAAAAUpGHNnBDB/BzOQD/iFYc/3GA
        Xv/Go1z/6Jk6/9WcR/9Pv7//hq6N/+OVOP/gmDz/7Jc0/+yWNP9PwMD/I8vm/3S1oP9Uvb7/Xrqx/42v
        iP+jqHf/tqBf/9yXO//qmDb/w6Nc/3B8V/95SAf/djoA/3JFCO1JqqYtAAAAAAAAAAAAAAAAAAAAAF9v
        To2YZzH/x7ec/52HYf93iWT/z6RY/+OaPf/HnlX/z5xN/+GYPf+wpWr/pKl1/+uWNP9hu7H/SMLH/+aV
        Nf/VmUj/45c8/+qVM/9ouaj/aLeo/+mWNf/Mo1j/eIZj/6+cgP+5pYP/hUoM/15vSoYAAAAAAAAAAAAA
        AAAAAAAAAAAAAFKPhhGBdUrLwqqK/66Saf9wTBf/cIBW/8WkXf/omj3/4pk9/+OYOv96tJv/Y7qx/+mU
        NP95tZr/erSb/6Koc/9Kwsf/0J1N/+CaPf/IoFP/z6BQ/76jW/9vflb/dk0Z/8Kvk//KtJX/cm9FxEKq
        rBEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABDm5QxfVwp4YBIBP90PgD/f1sl/258WP+koGb/2qNO/+ad
        P//ZnUb/05tK/+eWN/+Wq4H/nap7/8WfVf+eqXr/3ZtD/+adQf/eoUv/qJxk/3J/X/97Uhj/dT0A/4lW
        Gf+JdEnfR5SOKwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASoJpPGxFDeGLWRv/y7+m/7CT
        bv9wYzf/doFX/6KYXf/In1H/26JL/+aeQ//HpV7/yaNa/+adQf/inkn/xJ9W/5+XX/91f1X/dWk8/8Co
        jP+zmXL/fkcD/21KFN1Tink3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEWL
        fC56bkTJspVw/6uPZP96QwD/c0cH/4mCXv9+hV//fYVZ/4qPX/+Oj1r/kI9b/4mOYf99hFv/fH5a/4R5
        Uv90RQb/fEUC/7eeev+3mXb/b14uw1Z/ay0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABTdFwTZmxMi3ZOEe12OgD/l2kx/9DAqP+0nHv/cD4G/3JLEv+xp4r/rKCD/21D
        Cf92SQ//tqOB/8Gujv+DTw7/djsA/3xYH+thcEuJQZSKDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFh3VjljYTeZgWU34q+Vcf+ddUT/cjgA/35L
        Dv/e18r/0sa0/3dBAP94QAD/l2w0/6yQaP97WinfZ183llp9YDQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYV01JFhn
        RF1rXTKZbVYlwnZSGNuaeUrllnNA5XJNFNprWCjCYl0xllhxWlxgalUjAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/wAP/gAAAAP8AAP+AAAAA/AAAP4AA
        AAD4AAAfgAAAAPAAAA+AAAAA4AAAB4AAAADAAAADgAAAAMAAAAOAAAAAgAAAAYAAAAAAAAABgAAAAAAA
        AACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAGAAAAAgAAAAYAAAADAAAADgAAAAMAA
        AAOAAAAA4AAAB4AAAADwAAAPgAAAAPgAAB+AAAAA/AAAP4AAAAD/AAD/gAAAAP/AA/+AAAAA/////4AA
        AAA=
</value>
  </data>
</root>